---
- name: Install OpenSCAP scanner and SCAP Security Guide
  hosts: rhel8
  gather_facts: false
  become: true
  tasks:
    - name: Set file_name variable based on tags
      block:
        - name: Set the file_name variable for Level 1 Server
          set_fact:
            cis_level: "Level 1 - Server"
            profile: "xccdf_org.ssgproject.content_profile_cis_server_l1"
            arf_file: "arf_cis_server_l1.xml"
            file_name: "report_cis_server_l1.html"
            patch_file: "patch_cis_server_l1.yml"

          when: "'rhel8_level1_server' in ansible_run_tags"

        - name: Set the file_name variable for Level 2 Server
          set_fact:
            cis_level: "Level 2 - Server"
            profile: "xccdf_org.ssgproject.content_profile_cis"
            arf_file: "arf_cis_server_l2.xml"
            file_name: "report_cis_server_l2.html"
            patch_file: "patch_cis_server_l2.yml"
          when: "'rhel8_level2_server' in ansible_run_tags"

        - name: Set the file_name variable for Level 1 Workstation
          set_fact:
            cis_level: "Level 1 - Workstation"
            profile: "xccdf_org.ssgproject.content_profile_cis_workstation_l1"
            arf_file: "arf_cis_workstation_l1.xml"
            file_name: "report_cis_workstation_l1.html"
            patch_file: "patch_cis_workstation_l1.yml"
          when: "'rhel8_level1_workstation' in ansible_run_tags"

        - name: Set the file_name variable for Level 2 Workstation
          set_fact:
            cis_level: "Level 2 - Workstation"
            profile: "xccdf_org.ssgproject.content_profile_cis_workstation_l1"
            arf_file: "arf_cis_workstation_l2.xml"
            file_name: "report_cis_workstation_l2.html"
            patch_file: "patch_cis_workstation_l2.yml"
          when: "'rhel8_level2_workstation' in ansible_run_tags"
      when: ansible_run_tags is defined and ansible_run_tags | length > 0
      tags:
        - always

    - name: Check if openscap-scanner is installed
      command: rpm -q openscap-scanner
      register: openscap_scanner_installed
      changed_when: false
      ignore_errors: true
      tags:
      - always

    - name: Install openscap-scanner package
      dnf:
        name: openscap-scanner
        state: present
      tags:
      - always
      when: openscap_scanner_installed.rc != 0

    - name: Check if scap-security-guide is installed
      command: rpm -q scap-security-guide
      register: scap_security_guide_installed
      changed_when: false
      ignore_errors: true
      tags:
      - always

    - name: Install scap security-guide package
      dnf:
        name: scap-security-guide
        state: present
      when: scap_security_guide_installed.rc != 0
      tags:
      - always

    - name: Run OpenSCAP evaluation for CIS RHEL8 Benchmark -  {{ cis_level }}
      ansible.builtin.command:
        cmd: oscap xccdf eval --oval-results --profile {{ profile }} --results-arf /tmp/{{ arf_file }} --report /tmp/{{ file_name }} /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml
      ignore_errors: yes
      register: oscap_output
      tags:
        - audit
        - rhel8_level1_server
        - rhel8_level2_server
        - rhel8_level1_workstation
        - rhel8_level2_workstation
      when: "'audit' in ansible_run_tags and ('rhel8_level1_server' in ansible_run_tags or 'rhel8_level2_server' in ansible_run_tags or 'rhel8_level1_workstation' in ansible_run_tags or 'rhel8_level2_workstation' in ansible_run_tags)"

    - name: Fetch remote report html file
      fetch:
        src: /tmp/{{ file_name }}
        dest: /home/mario/Documents/oscap-ansible-project/RHEL8
        flat: yes
      tags:
        - audit
        - rhel8_level1_server
        - rhel8_level2_server
        - rhel8_level1_workstation
        - rhel8_level2_workstation
      when: "'audit' in ansible_run_tags and ('rhel8_level1_server' in ansible_run_tags or 'rhel8_level2_server' in ansible_run_tags or 'rhel8_level1_workstation' in ansible_run_tags or 'rhel8_level2_workstation' in ansible_run_tags)"

    - name: Create remediation playbook for CIS RHEL8 Benchmark -  {{ cis_level }}
      ansible.builtin.shell:
        cmd: oscap xccdf generate fix --fix-type ansible --result-id "" /tmp/{{ arf_file }} > /tmp/{{ patch_file }}
      ignore_errors: yes
      register: oscap_output
      tags:
        - patch
        - rhel8_level1_server
        - rhel8_level2_server
        - rhel8_level1_workstation
        - rhel8_level2_workstation
      when: "'patch' in ansible_run_tags and ('rhel8_level1_server' in ansible_run_tags or 'rhel8_level2_server' in ansible_run_tags or 'rhel8_level1_workstation' in ansible_run_tags or 'rhel8_level2_workstation' in ansible_run_tags)"
 

    - name: Fetch remediation file
      fetch:
        src: /tmp/{{ patch_file }}
        dest: /home/mario/Documents/oscap-ansible-project/RHEL8/
        flat: yes
      tags:
        - patch
        - rhel8_level1_server
        - rhel8_level2_server
        - rhel8_level1_workstation
        - rhel8_level2_workstation
      when: "'patch' in ansible_run_tags and ('rhel8_level1_server' in ansible_run_tags or 'rhel8_level2_server' in ansible_run_tags or 'rhel8_level1_workstation' in ansible_run_tags or 'rhel8_level2_workstation' in ansible_run_tags)"

   